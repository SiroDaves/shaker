name: Publishing

on:
  push:
    tags:
      - '*'

concurrency:
  group: ${{ github.workflow }} - ${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout project sources
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '21'
          cache: 'gradle'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4
        with:
          cache-read-only: false

      - name: Build and package distribution
        run: ./gradlew packageDistributionForCurrentOS
        env:
          VERSION: ${{ github.ref_name }}

      - name: Upload Platform-Specific Artifact
        shell: bash
        run: |
          if [[ "${{ matrix.os }}" == "macos-latest" ]]; then
            echo "artifact_path=build/compose/binaries/main/dmg/*.dmg" >> $GITHUB_ENV
          elif [[ "${{ matrix.os }}" == "ubuntu-latest" ]]; then
            echo "artifact_path=build/compose/binaries/main/deb/*.deb" >> $GITHUB_ENV
          elif [[ "${{ matrix.os }}" == "windows-latest" ]]; then
            echo "artifact_path=build/compose/binaries/main/exe/*.exe" >> $GITHUB_ENV
          fi

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: shaker-${{ github.ref_name }}-${{ matrix.os }}
          path: ${{ env.artifact_path }}

  publish:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout project sources
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Download Linux artifact
        uses: actions/download-artifact@v4
        with:
          name: shaker-${{ github.ref_name }}-ubuntu-latest
          path: linux_artifacts

      - name: Download macOS artifact
        uses: actions/download-artifact@v4
        with:
          name: shaker-${{ github.ref_name }}-macos-latest
          path: macos_artifacts

      - name: Download Windows artifact
        uses: actions/download-artifact@v4
        with:
          name: shaker-${{ github.ref_name }}-windows-latest
          path: windows_artifacts

      - name: Generate Release Notes
        id: release_notes
        run: |
          # Attempt to get the previous tag, default to empty if none exists
          PREVIOUS_TAG=$(git describe --tags --abbrev=0 HEAD^ 2>/dev/null || echo "")
          if [ -z "$PREVIOUS_TAG" ]; then
            # If no previous tag exists, include all commits in the repository
            COMMITS=$(git log --oneline)
          else
            # Generate updates between the previous tag and the current HEAD
            COMMITS=$(git log $PREVIOUS_TAG..HEAD --oneline)
          fi
          
          # Save the release notes
          echo -e "release_body=This release includes builds for MacOS (.dmg), Linux (.deb), and Windows (.exe).\n\nUpdates:\n$COMMITS" >> $GITHUB_ENV

      - name: Publish artifacts to GitHub Releases
        uses: ncipollo/release-action@v1
        with:
          token: ${{ secrets.ACCESS_TOKEN }}
          artifacts: |
            linux_artifacts/*.deb, 
            macos_artifacts/*.dmg, 
            windows_artifacts/*.exe
          tag: ${{ github.ref_name }}
          body: ${{ env.release_body }}
